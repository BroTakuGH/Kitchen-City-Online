// Generated by view binder compiler. Do not edit!
package com.example.finals.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finals.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView AdminRefresh;

  @NonNull
  public final TextView Item1Name;

  @NonNull
  public final TextView Item1price;

  @NonNull
  public final TextView Item2Name;

  @NonNull
  public final TextView Item2Price;

  @NonNull
  public final TextView Item3Name;

  @NonNull
  public final TextView Item3Price;

  @NonNull
  public final TextView Item4Name;

  @NonNull
  public final TextView Item4Price;

  @NonNull
  public final TextView Item5Name;

  @NonNull
  public final TextView Item5Price;

  @NonNull
  public final TextView Item6Name;

  @NonNull
  public final TextView Item6Price;

  @NonNull
  public final RelativeLayout itemEdit0;

  @NonNull
  public final TextView itemEdit1;

  @NonNull
  public final TextView itemEdit2;

  @NonNull
  public final TextView itemEdit3;

  @NonNull
  public final TextView itemEdit4;

  @NonNull
  public final TextView itemEdit5;

  @NonNull
  public final TextView itemEdit6;

  @NonNull
  public final BottomNavigationView navBar4;

  private AdminBinding(@NonNull RelativeLayout rootView, @NonNull TextView AdminRefresh,
      @NonNull TextView Item1Name, @NonNull TextView Item1price, @NonNull TextView Item2Name,
      @NonNull TextView Item2Price, @NonNull TextView Item3Name, @NonNull TextView Item3Price,
      @NonNull TextView Item4Name, @NonNull TextView Item4Price, @NonNull TextView Item5Name,
      @NonNull TextView Item5Price, @NonNull TextView Item6Name, @NonNull TextView Item6Price,
      @NonNull RelativeLayout itemEdit0, @NonNull TextView itemEdit1, @NonNull TextView itemEdit2,
      @NonNull TextView itemEdit3, @NonNull TextView itemEdit4, @NonNull TextView itemEdit5,
      @NonNull TextView itemEdit6, @NonNull BottomNavigationView navBar4) {
    this.rootView = rootView;
    this.AdminRefresh = AdminRefresh;
    this.Item1Name = Item1Name;
    this.Item1price = Item1price;
    this.Item2Name = Item2Name;
    this.Item2Price = Item2Price;
    this.Item3Name = Item3Name;
    this.Item3Price = Item3Price;
    this.Item4Name = Item4Name;
    this.Item4Price = Item4Price;
    this.Item5Name = Item5Name;
    this.Item5Price = Item5Price;
    this.Item6Name = Item6Name;
    this.Item6Price = Item6Price;
    this.itemEdit0 = itemEdit0;
    this.itemEdit1 = itemEdit1;
    this.itemEdit2 = itemEdit2;
    this.itemEdit3 = itemEdit3;
    this.itemEdit4 = itemEdit4;
    this.itemEdit5 = itemEdit5;
    this.itemEdit6 = itemEdit6;
    this.navBar4 = navBar4;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AdminRefresh;
      TextView AdminRefresh = ViewBindings.findChildViewById(rootView, id);
      if (AdminRefresh == null) {
        break missingId;
      }

      id = R.id.Item1Name;
      TextView Item1Name = ViewBindings.findChildViewById(rootView, id);
      if (Item1Name == null) {
        break missingId;
      }

      id = R.id.Item1price;
      TextView Item1price = ViewBindings.findChildViewById(rootView, id);
      if (Item1price == null) {
        break missingId;
      }

      id = R.id.Item2Name;
      TextView Item2Name = ViewBindings.findChildViewById(rootView, id);
      if (Item2Name == null) {
        break missingId;
      }

      id = R.id.Item2Price;
      TextView Item2Price = ViewBindings.findChildViewById(rootView, id);
      if (Item2Price == null) {
        break missingId;
      }

      id = R.id.Item3Name;
      TextView Item3Name = ViewBindings.findChildViewById(rootView, id);
      if (Item3Name == null) {
        break missingId;
      }

      id = R.id.Item3Price;
      TextView Item3Price = ViewBindings.findChildViewById(rootView, id);
      if (Item3Price == null) {
        break missingId;
      }

      id = R.id.Item4Name;
      TextView Item4Name = ViewBindings.findChildViewById(rootView, id);
      if (Item4Name == null) {
        break missingId;
      }

      id = R.id.Item4Price;
      TextView Item4Price = ViewBindings.findChildViewById(rootView, id);
      if (Item4Price == null) {
        break missingId;
      }

      id = R.id.Item5Name;
      TextView Item5Name = ViewBindings.findChildViewById(rootView, id);
      if (Item5Name == null) {
        break missingId;
      }

      id = R.id.Item5Price;
      TextView Item5Price = ViewBindings.findChildViewById(rootView, id);
      if (Item5Price == null) {
        break missingId;
      }

      id = R.id.Item6Name;
      TextView Item6Name = ViewBindings.findChildViewById(rootView, id);
      if (Item6Name == null) {
        break missingId;
      }

      id = R.id.Item6Price;
      TextView Item6Price = ViewBindings.findChildViewById(rootView, id);
      if (Item6Price == null) {
        break missingId;
      }

      RelativeLayout itemEdit0 = (RelativeLayout) rootView;

      id = R.id.itemEdit1;
      TextView itemEdit1 = ViewBindings.findChildViewById(rootView, id);
      if (itemEdit1 == null) {
        break missingId;
      }

      id = R.id.itemEdit2;
      TextView itemEdit2 = ViewBindings.findChildViewById(rootView, id);
      if (itemEdit2 == null) {
        break missingId;
      }

      id = R.id.itemEdit3;
      TextView itemEdit3 = ViewBindings.findChildViewById(rootView, id);
      if (itemEdit3 == null) {
        break missingId;
      }

      id = R.id.itemEdit4;
      TextView itemEdit4 = ViewBindings.findChildViewById(rootView, id);
      if (itemEdit4 == null) {
        break missingId;
      }

      id = R.id.itemEdit5;
      TextView itemEdit5 = ViewBindings.findChildViewById(rootView, id);
      if (itemEdit5 == null) {
        break missingId;
      }

      id = R.id.itemEdit6;
      TextView itemEdit6 = ViewBindings.findChildViewById(rootView, id);
      if (itemEdit6 == null) {
        break missingId;
      }

      id = R.id.nav_bar4;
      BottomNavigationView navBar4 = ViewBindings.findChildViewById(rootView, id);
      if (navBar4 == null) {
        break missingId;
      }

      return new AdminBinding((RelativeLayout) rootView, AdminRefresh, Item1Name, Item1price,
          Item2Name, Item2Price, Item3Name, Item3Price, Item4Name, Item4Price, Item5Name,
          Item5Price, Item6Name, Item6Price, itemEdit0, itemEdit1, itemEdit2, itemEdit3, itemEdit4,
          itemEdit5, itemEdit6, navBar4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
