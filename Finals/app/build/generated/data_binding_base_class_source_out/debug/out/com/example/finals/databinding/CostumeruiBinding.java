// Generated by view binder compiler. Do not edit!
package com.example.finals.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finals.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CostumeruiBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout blank;

  @NonNull
  public final TextView fifthCaption;

  @NonNull
  public final ImageView fifthMenu;

  @NonNull
  public final TextView fifthPrice;

  @NonNull
  public final TextView firstCaption;

  @NonNull
  public final ImageView firstMenu;

  @NonNull
  public final TextView firstPrice;

  @NonNull
  public final TextView forthCaption;

  @NonNull
  public final TextView forthPrice;

  @NonNull
  public final ImageView fourthMenu;

  @NonNull
  public final BottomNavigationView navBar;

  @NonNull
  public final TextView secondCaption;

  @NonNull
  public final ImageView secondMenu;

  @NonNull
  public final TextView secondPrice;

  @NonNull
  public final TextView sixthCaption;

  @NonNull
  public final ImageView sixthMenu;

  @NonNull
  public final TextView sixthPrice;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final TextView thirdCaption;

  @NonNull
  public final ImageView thirdMenu;

  @NonNull
  public final TextView thirdPrice;

  private CostumeruiBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout blank,
      @NonNull TextView fifthCaption, @NonNull ImageView fifthMenu, @NonNull TextView fifthPrice,
      @NonNull TextView firstCaption, @NonNull ImageView firstMenu, @NonNull TextView firstPrice,
      @NonNull TextView forthCaption, @NonNull TextView forthPrice, @NonNull ImageView fourthMenu,
      @NonNull BottomNavigationView navBar, @NonNull TextView secondCaption,
      @NonNull ImageView secondMenu, @NonNull TextView secondPrice, @NonNull TextView sixthCaption,
      @NonNull ImageView sixthMenu, @NonNull TextView sixthPrice,
      @NonNull SwipeRefreshLayout swipeRefresh, @NonNull TextView thirdCaption,
      @NonNull ImageView thirdMenu, @NonNull TextView thirdPrice) {
    this.rootView = rootView;
    this.blank = blank;
    this.fifthCaption = fifthCaption;
    this.fifthMenu = fifthMenu;
    this.fifthPrice = fifthPrice;
    this.firstCaption = firstCaption;
    this.firstMenu = firstMenu;
    this.firstPrice = firstPrice;
    this.forthCaption = forthCaption;
    this.forthPrice = forthPrice;
    this.fourthMenu = fourthMenu;
    this.navBar = navBar;
    this.secondCaption = secondCaption;
    this.secondMenu = secondMenu;
    this.secondPrice = secondPrice;
    this.sixthCaption = sixthCaption;
    this.sixthMenu = sixthMenu;
    this.sixthPrice = sixthPrice;
    this.swipeRefresh = swipeRefresh;
    this.thirdCaption = thirdCaption;
    this.thirdMenu = thirdMenu;
    this.thirdPrice = thirdPrice;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CostumeruiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CostumeruiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.costumerui, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CostumeruiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blank;
      LinearLayout blank = ViewBindings.findChildViewById(rootView, id);
      if (blank == null) {
        break missingId;
      }

      id = R.id.fifthCaption;
      TextView fifthCaption = ViewBindings.findChildViewById(rootView, id);
      if (fifthCaption == null) {
        break missingId;
      }

      id = R.id.fifthMenu;
      ImageView fifthMenu = ViewBindings.findChildViewById(rootView, id);
      if (fifthMenu == null) {
        break missingId;
      }

      id = R.id.fifthPrice;
      TextView fifthPrice = ViewBindings.findChildViewById(rootView, id);
      if (fifthPrice == null) {
        break missingId;
      }

      id = R.id.firstCaption;
      TextView firstCaption = ViewBindings.findChildViewById(rootView, id);
      if (firstCaption == null) {
        break missingId;
      }

      id = R.id.firstMenu;
      ImageView firstMenu = ViewBindings.findChildViewById(rootView, id);
      if (firstMenu == null) {
        break missingId;
      }

      id = R.id.firstPrice;
      TextView firstPrice = ViewBindings.findChildViewById(rootView, id);
      if (firstPrice == null) {
        break missingId;
      }

      id = R.id.forthCaption;
      TextView forthCaption = ViewBindings.findChildViewById(rootView, id);
      if (forthCaption == null) {
        break missingId;
      }

      id = R.id.forthPrice;
      TextView forthPrice = ViewBindings.findChildViewById(rootView, id);
      if (forthPrice == null) {
        break missingId;
      }

      id = R.id.fourthMenu;
      ImageView fourthMenu = ViewBindings.findChildViewById(rootView, id);
      if (fourthMenu == null) {
        break missingId;
      }

      id = R.id.nav_bar;
      BottomNavigationView navBar = ViewBindings.findChildViewById(rootView, id);
      if (navBar == null) {
        break missingId;
      }

      id = R.id.secondCaption;
      TextView secondCaption = ViewBindings.findChildViewById(rootView, id);
      if (secondCaption == null) {
        break missingId;
      }

      id = R.id.secondMenu;
      ImageView secondMenu = ViewBindings.findChildViewById(rootView, id);
      if (secondMenu == null) {
        break missingId;
      }

      id = R.id.secondPrice;
      TextView secondPrice = ViewBindings.findChildViewById(rootView, id);
      if (secondPrice == null) {
        break missingId;
      }

      id = R.id.sixthCaption;
      TextView sixthCaption = ViewBindings.findChildViewById(rootView, id);
      if (sixthCaption == null) {
        break missingId;
      }

      id = R.id.sixthMenu;
      ImageView sixthMenu = ViewBindings.findChildViewById(rootView, id);
      if (sixthMenu == null) {
        break missingId;
      }

      id = R.id.sixthPrice;
      TextView sixthPrice = ViewBindings.findChildViewById(rootView, id);
      if (sixthPrice == null) {
        break missingId;
      }

      id = R.id.swipeRefresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.thirdCaption;
      TextView thirdCaption = ViewBindings.findChildViewById(rootView, id);
      if (thirdCaption == null) {
        break missingId;
      }

      id = R.id.thirdMenu;
      ImageView thirdMenu = ViewBindings.findChildViewById(rootView, id);
      if (thirdMenu == null) {
        break missingId;
      }

      id = R.id.thirdPrice;
      TextView thirdPrice = ViewBindings.findChildViewById(rootView, id);
      if (thirdPrice == null) {
        break missingId;
      }

      return new CostumeruiBinding((RelativeLayout) rootView, blank, fifthCaption, fifthMenu,
          fifthPrice, firstCaption, firstMenu, firstPrice, forthCaption, forthPrice, fourthMenu,
          navBar, secondCaption, secondMenu, secondPrice, sixthCaption, sixthMenu, sixthPrice,
          swipeRefresh, thirdCaption, thirdMenu, thirdPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
