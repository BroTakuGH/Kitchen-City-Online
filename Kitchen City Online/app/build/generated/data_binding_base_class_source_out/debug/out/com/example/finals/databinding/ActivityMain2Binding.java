// Generated by view binder compiler. Do not edit!
package com.example.finals.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finals.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMain2Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView forgotpass;

  @NonNull
  public final TextView loginButton;

  @NonNull
  public final EditText passwordInput;

  @NonNull
  public final TextView signup;

  @NonNull
  public final TextInputEditText userID;

  private ActivityMain2Binding(@NonNull LinearLayout rootView, @NonNull TextView forgotpass,
      @NonNull TextView loginButton, @NonNull EditText passwordInput, @NonNull TextView signup,
      @NonNull TextInputEditText userID) {
    this.rootView = rootView;
    this.forgotpass = forgotpass;
    this.loginButton = loginButton;
    this.passwordInput = passwordInput;
    this.signup = signup;
    this.userID = userID;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMain2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMain2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMain2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.forgotpass;
      TextView forgotpass = ViewBindings.findChildViewById(rootView, id);
      if (forgotpass == null) {
        break missingId;
      }

      id = R.id.loginButton;
      TextView loginButton = ViewBindings.findChildViewById(rootView, id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.password_input;
      EditText passwordInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordInput == null) {
        break missingId;
      }

      id = R.id.signup;
      TextView signup = ViewBindings.findChildViewById(rootView, id);
      if (signup == null) {
        break missingId;
      }

      id = R.id.userID;
      TextInputEditText userID = ViewBindings.findChildViewById(rootView, id);
      if (userID == null) {
        break missingId;
      }

      return new ActivityMain2Binding((LinearLayout) rootView, forgotpass, loginButton,
          passwordInput, signup, userID);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
